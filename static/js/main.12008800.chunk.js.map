{"version":3,"sources":["components/Validation.jsx","components/App.jsx","index.js"],"names":["renderfield","field","Type","type","size","Size","maxLength","id","Options","map","value","name","DisplayValue","Value","DropdownValue","App","form","useState","setForm","useEffect","fetch","then","res","json","data","usePosts","Object","keys","length","className","form_heading","Attributes","htmlFor","Name","ActionDisplayName","ReactDOM","render","document","getElementById"],"mappings":"mMA2DeA,EA1DG,SAACC,GACjB,OAAQA,EAAMC,MACZ,IAAK,UACH,OAAO,uBAAOC,KAAK,OAAOC,KAAMH,EAAMI,KAAMC,UAAWL,EAAMI,KAAME,GAAIN,EAAMM,KAC/E,IAAK,gBACH,OAAO,uBAAOJ,KAAK,WAAWC,KAAMH,EAAMI,KAAMC,UAAWL,EAAMI,KAAME,GAAKN,EAAMM,KACpF,IAAK,WACH,OACE,8BACGN,EAAMO,QAAQC,KAAI,SAACC,GAAD,OACjB,kCACE,uBACEP,KAAK,WACLQ,KAAMD,EAAME,aACZF,MAAOA,EAAMG,MACbN,GAAIG,EAAMG,QAEZ,qCACCH,EAAME,aACP,+BACE,iCAMZ,IAAK,WACH,OACE,wBAAQL,GAAKN,EAAMM,GAAnB,SACGN,EAAMa,cAAcL,KAAI,SAACC,GAAD,OACvB,wBAAQA,MAAOA,EAAMG,MAArB,SAA6BH,EAAME,oBAI3C,IAAK,cACH,OACE,8BACGX,EAAMO,QAAQC,KAAI,SAACC,GAAD,OACjB,kCACE,uBACEP,KAAK,QACLQ,KAAMD,EAAME,aACZF,MAAOA,EAAMG,MACbN,GAAIG,EAAMG,QAEZ,qCACCH,EAAME,aACP,+BACE,iCAMZ,QACE,OAAO,uBAAOT,KAAMF,EAAMC,SC9BjB,SAASa,IACtB,IAAMC,EAjBR,WACE,MAAwBC,mBAAS,IAAjC,mBAAOD,EAAP,KAAaE,EAAb,KAUA,OARAC,qBAAU,WACRC,MATe,8BAUZC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLN,EAAQM,QAEX,IAEIR,EAMMS,GACb,OAAIC,OAAOC,KAAKX,GAAMY,OAAS,EACtB,aAIP,8BACE,qBAAKC,UAAU,YAAf,SACE,uBAAMtB,GAAG,UAAT,UACE,6BAAKS,EAAKc,eACTd,EAAKe,WAAWtB,KAAI,SAACR,GAAD,OACnB,sBAAK4B,UAAU,cAAf,UACE,uBAAOG,QAAS/B,EAAMgC,KAAtB,SAA6BhC,EAAMgC,OACnC,mCACGjC,EAAYC,WAKnB,wBAAQE,KAAK,SAAb,SAAuBa,EAAKkB,2BC1CtCC,IAASC,OAAO,cAACrB,EAAD,IAASsB,SAASC,eAAe,W","file":"static/js/main.12008800.chunk.js","sourcesContent":["import React from \"react\";\nvar renderfield = (field) => {\n  switch (field.Type) {\n    case \"TextBox\":\n      return <input type=\"text\" size={field.Size} maxLength={field.Size} id={field.id}/>;\n    case \"SecretTextBox\":\n      return <input type=\"password\" size={field.Size} maxLength={field.Size} id= {field.id} />;\n    case \"CheckBox\":\n      return (\n        <div>\n          {field.Options.map((value) => (\n            <label>\n              <input\n                type=\"checkbox\"\n                name={value.DisplayValue}\n                value={value.Value}\n                id={value.Value}\n              />\n              <span> </span>\n              {value.DisplayValue}\n              <span>\n                <br />\n              </span>\n            </label>\n          ))}\n        </div>\n      );\n    case \"Dropdown\":\n      return (\n        <select id= {field.id}>\n          {field.DropdownValue.map((value) => (\n            <option value={value.Value}>{value.DisplayValue}</option>\n          ))}\n        </select>\n      );\n    case \"RadioButton\":\n      return (\n        <div>\n          {field.Options.map((value) => (\n            <label>\n              <input\n                type=\"radio\"\n                name={value.DisplayValue}\n                value={value.Value}\n                id={value.Value}\n              />\n              <span> </span>\n              {value.DisplayValue}\n              <span>\n                <br />\n              </span>\n            </label>\n          ))}\n        </div>\n      );\n    default:\n      return <input type={field.Type} />;\n  }\n};\nexport default renderfield;\n","import React, { useEffect, useState } from \"react\";\nimport renderfield from \"./Validation\";\n//import form from \"../data.json\";\n//import form from \"../data/data\";\n//const SERVER_URL =\"https://my-json-server.typicode.com/Charanselvam/json/form\";\nconst SERVER_URL = \"http://localhost:3001/form\";\n// https://charanselvam.github.io/dynamic-webpage-builder-form/\n\n\n// function for fetching json data\nfunction usePosts() {\n  const [form, setForm] = useState([]);\n\n  useEffect(() => {\n    fetch(SERVER_URL)\n      .then((res) => res.json())\n      .then((data) => {\n        setForm(data);\n      });\n  }, []);\n  //console.log(form);\n  return form;\n}\n\n// render function\n\nexport default function App() {\n  const form = usePosts(); // new\n  if (Object.keys(form).length < 1) {\n    return \"Loading...\";\n  }\n\n  return (\n    <div>\n      <div className=\"container\">\n        <form id=\"contact\" >\n          <h1>{form.form_heading}</h1>\n          {form.Attributes.map((field) => (\n            <div className=\"input-group\">\n              <label htmlFor={field.Name}>{field.Name}</label>\n              <fieldset>\n                {renderfield(field)}\n              </fieldset>\n            </div>\n          ))}\n\n          <button type=\"submit\">{form.ActionDisplayName}</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}