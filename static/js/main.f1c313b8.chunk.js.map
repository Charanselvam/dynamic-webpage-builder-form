{"version":3,"sources":["components/Validation.jsx","components/App.jsx","index.js"],"names":["renderfield","field","Type","type","size","Size","maxLength","id","Options","map","value","name","DisplayValue","Value","DropdownValue","App","form","useState","setForm","useEffect","fetch","then","res","json","data","usePosts","Object","keys","length","className","form_heading","Attributes","htmlFor","Name","ActionDisplayName","ReactDOM","render","document","getElementById"],"mappings":"mMA2DeA,EA1DG,SAACC,GACjB,OAAQA,EAAMC,MACZ,IAAK,UACH,OAAO,uBAAOC,KAAK,OAAOC,KAAMH,EAAMI,KAAMC,UAAWL,EAAMI,KAAME,GAAIN,EAAMM,KAC/E,IAAK,gBACH,OAAO,uBAAOJ,KAAK,WAAWC,KAAMH,EAAMI,KAAMC,UAAWL,EAAMI,KAAME,GAAKN,EAAMM,KACpF,IAAK,WACH,OACE,8BACGN,EAAMO,QAAQC,KAAI,SAACC,GAAD,OACjB,kCACE,uBACEP,KAAK,WACLQ,KAAMD,EAAME,aACZF,MAAOA,EAAMG,MACbN,GAAIG,EAAMG,QAEZ,qCACCH,EAAME,aACP,+BACE,iCAMZ,IAAK,WACH,OACE,wBAAQL,GAAKN,EAAMM,GAAnB,SACGN,EAAMa,cAAcL,KAAI,SAACC,GAAD,OACvB,wBAAQA,MAAOA,EAAMG,MAArB,SAA6BH,EAAME,oBAI3C,IAAK,cACH,OACE,8BACGX,EAAMO,QAAQC,KAAI,SAACC,GAAD,OACjB,kCACE,uBACEP,KAAK,QACLQ,KAAMD,EAAME,aACZF,MAAOA,EAAMG,MACbN,GAAIG,EAAMG,QAEZ,qCACCH,EAAME,aACP,+BACE,iCAMZ,QACE,OAAO,uBAAOT,KAAMF,EAAMC,SC9BjB,SAASa,IACtB,IAAMC,EAjBR,WACE,MAAwBC,mBAAS,IAAjC,mBAAOD,EAAP,KAAaE,EAAb,KAUA,OARAC,qBAAU,WACRC,MATe,8BAUZC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLN,EAAQM,QAEX,IAEIR,EAMMS,GACb,OAAIC,OAAOC,KAAKX,GAAMY,OAAS,EACtB,aAIP,8BACE,qBAAKC,UAAU,YAAf,SACE,uBAAMtB,GAAG,UAAT,UACE,6BAAKS,EAAKc,eACTd,EAAKe,WAAWtB,KAAI,SAACR,GAAD,OACnB,sBAAK4B,UAAU,cAAf,UACE,uBAAOG,QAAS/B,EAAMgC,KAAtB,SAA6BhC,EAAMgC,OACnC,mCACGjC,EAAYC,WAKnB,wBAAQE,KAAK,SAAb,SAAuBa,EAAKkB,2BC1CtCC,IAASC,OAAO,cAACrB,EAAD,IAASsB,SAASC,eAAe,W","file":"static/js/main.f1c313b8.chunk.js","sourcesContent":["import React from \"react\";\r\nvar renderfield = (field) => {\r\n  switch (field.Type) {\r\n    case \"TextBox\":\r\n      return <input type=\"text\" size={field.Size} maxLength={field.Size} id={field.id}/>;\r\n    case \"SecretTextBox\":\r\n      return <input type=\"password\" size={field.Size} maxLength={field.Size} id= {field.id} />;\r\n    case \"CheckBox\":\r\n      return (\r\n        <div>\r\n          {field.Options.map((value) => (\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                name={value.DisplayValue}\r\n                value={value.Value}\r\n                id={value.Value}\r\n              />\r\n              <span> </span>\r\n              {value.DisplayValue}\r\n              <span>\r\n                <br />\r\n              </span>\r\n            </label>\r\n          ))}\r\n        </div>\r\n      );\r\n    case \"Dropdown\":\r\n      return (\r\n        <select id= {field.id}>\r\n          {field.DropdownValue.map((value) => (\r\n            <option value={value.Value}>{value.DisplayValue}</option>\r\n          ))}\r\n        </select>\r\n      );\r\n    case \"RadioButton\":\r\n      return (\r\n        <div>\r\n          {field.Options.map((value) => (\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name={value.DisplayValue}\r\n                value={value.Value}\r\n                id={value.Value}\r\n              />\r\n              <span> </span>\r\n              {value.DisplayValue}\r\n              <span>\r\n                <br />\r\n              </span>\r\n            </label>\r\n          ))}\r\n        </div>\r\n      );\r\n    default:\r\n      return <input type={field.Type} />;\r\n  }\r\n};\r\nexport default renderfield;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport renderfield from \"./Validation\";\r\n//import form from \"../data.json\";\r\n//import form from \"../data/data\";\r\n//const SERVER_URL =\"https://my-json-server.typicode.com/Charanselvam/json/form\";\r\nconst SERVER_URL = \"http://localhost:3001/form\";\r\n// https://charanselvam.github.io/dynamic-webpage-builder-form/\r\n\r\n\r\n// function for fetching json data\r\nfunction usePosts() {\r\n  const [form, setForm] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(SERVER_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setForm(data);\r\n      });\r\n  }, []);\r\n  //console.log(form);\r\n  return form;\r\n}\r\n\r\n// render function\r\n\r\nexport default function App() {\r\n  const form = usePosts(); // new\r\n  if (Object.keys(form).length < 1) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <form id=\"contact\" >\r\n          <h1>{form.form_heading}</h1>\r\n          {form.Attributes.map((field) => (\r\n            <div className=\"input-group\">\r\n              <label htmlFor={field.Name}>{field.Name}</label>\r\n              <fieldset>\r\n                {renderfield(field)}\r\n              </fieldset>\r\n            </div>\r\n          ))}\r\n\r\n          <button type=\"submit\">{form.ActionDisplayName}</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}